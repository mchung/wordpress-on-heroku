server {
  server_name       localhost;
  listen            <%= ENV['PORT'] %>;

  # Some basic cache-control for static files to be sent to the browser
  location ~ \.(html|htm|rtf|rtx|svg|svgz|txt|xsd|xsl|xml)$ {
    try_files       $uri =404;
    expires         86000s;
    add_header      Pragma "public";
    add_header      Cache-Control "max-age=86000, public, must-revalidate, proxy-revalidate";
  }

  location ~ \.(css|js|htc)$ {
    try_files       $uri =404;
    expires         max;
    add_header      Pragma "public";
    add_header      Cache-Control "max-age=31536000, public, must-revalidate, proxy-revalidate";
    access_log      off;
  }

  location ~ \.(asf|asx|wax|wmv|wmx|avi|bmp|class|divx|doc|docx|eot|exe|gif|gz|gzip|ico|jpg|jpeg|jpe|mdb|mid|midi|mov|qt|mp3|m4a|mp4|m4v|mpeg|mpg|mpe|mpp|otf|odb|odc|odf|odg|odp|ods|odt|ogg|pdf|png|pot|pps|ppt|pptx|ra|ram|svg|svgz|swf|tar|tif|tiff|ttf|ttc|wav|wma|wri|xla|xls|xlsx|xlt|xlw|zip)$ {
    try_files       $uri =404;
    expires         max;
    add_header      Pragma "public";
    add_header      Cache-Control "max-age=31536000, public, must-revalidate, proxy-revalidate";
    access_log      off;
  }

  # Deny hidden files (.htaccess, .htpasswd, .DS_Store).
  location ~ /\. {
    deny            all;
    access_log      off;
    log_not_found   off;
  }

  # Deny /favicon.ico
  location = /favicon.ico {
    access_log      off;
    log_not_found   off;
  }

  # Deny /robots.txt
  location = /robots.txt {
    allow           all;
    log_not_found   off;
    access_log      off;
  }

  # # Disable php-fpm /status.html
  location = /status.html {
    deny            all;
    access_log      off;
  }

  # # PHP status. /status.html uses /status
  # location ~ ^/(status|ping)$ {
  #   include         /app/vendor/nginx/conf/fastcgi_params;
  #   fastcgi_pass    unix:/tmp/php-fpm.socket;
  #   fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
  # }

  # Nginx status. http://wiki.nginx.org/HttpStubStatusModule
  # location /nginx_status {
  #   # copied from http://blog.kovyrin.net/2006/04/29/monitoring-nginx-with-rrdtool/
  #   stub_status     on;
  #   access_log      off;
  #   allow           SOME.IP.ADD.RESS;
  #   deny            all;
  # }

  # Rewrite herokuapp.com url to stop duplicate content
  # Uncomment and edit as required
  # if ($host ~* "^yourblog.herokuapp.com$") {
  #   rewrite ^(.*)$ http://blog.yourdomain.com$1 permanent;
  #   break;
  # }
  
  # Set a variable to work around the lack of nested conditionals
  set $cache_uri $request_uri;

  # POST requests and urls with a query string should always go to PHP
  if ($request_method = POST) {
      set $cache_uri 'no cache';
  }

  if ($query_string != "") {
      set $cache_uri 'no cache';
  }

  # Don't cache uris containing the following segments
  # if ($request_uri ~* "(\/wp-admin\/|\/xmlrpc.php|\/wp-(app|cron|login|register|mail)\.php|wp-.*\.php|index\.php|wp\-comments\-popup\.php|wp\-links\-opml\.php|wp\-locations\.php)") {
  #     set $cache_uri "no cache";
  # }

  # Don't use the cache for logged in users or recent commenters
  if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp\-postpass|wordpress_logged_in") {
      set $cache_uri 'no cache';
  }

  # Enable clickjacking protection
  add_header      X-Frame-Options SAMEORIGIN;

  # X-Powered-By Wordpress on Heroku
  add_header      X-Powered-By "Wordpress on Heroku http://git.io/SAoKQQ";

  location / {
    # wordpress fancy rewrites
    if (-f $request_filename) {
      break;
    }

    if (-d $request_filename) {
      break;
    }

    rewrite         ^(.+)$ /index.php?q=$1 last;

    # redirect to feedburner.
    # if ($http_user_agent !~ FeedBurner) {
    #   rewrite ^/feed/?$ http://feeds.feedburner.com/feedburner-feed-id last;
    # }
  }

  location ~ .*\.php$ {
    include         /app/vendor/nginx/conf/fastcgi_params;
    fastcgi_pass    unix:/tmp/php-fpm.socket;
    fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
  }
}
